name: CI
on:
  push:
    branches:
      - main
    paths-ignore:
      - deploy/wrangler.toml
      - deploy/src/**
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
    - run: lsb_release -a
    - run: uname -a
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: '16.15.0'
    - run: npm install -g yarn@1.22.10

    - name: Cache Desktop node_modules
      id: cache-desktop-modules
      uses: actions/cache@v3
      with:
        path: node_modules
        key: ${{ runner.os }}-${{ hashFiles('package.json', 'yarn.lock', 'patches/**') }}
    - name: Install Desktop node_modules
      if: steps.cache-desktop-modules.outputs.cache-hit != 'true'
      run: yarn install --frozen-lockfile

    - run: yarn generate
    - run: yarn lint
    - run: yarn lint-deps
    # - run: yarn lint-license-comments
    - run: git diff --exit-code

    - uses: sarisia/actions-status-discord@v1
      if: ${{ always() && !success() }}
      with:
        webhook: ${{ secrets.DISCORD_ACTION_URL }}
        title: ${{ github.workflow }} lint

  macos:
    needs: lint
    runs-on: macos-11
    if: ${{ github.repository == '3numdao/Signal.web3-Desktop' }}
    timeout-minutes: 45

    steps:
    - run: uname -a
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: '16.15.0'
    - run: npm install -g yarn@1.22.10

    - name: Cache Desktop node_modules
      id: cache-desktop-modules
      uses: actions/cache@v3
      with:
        path: node_modules
        key: ${{ runner.os }}-${{ hashFiles('package.json', 'yarn.lock', 'patches/**') }}
    - name: Install Desktop node_modules
      if: steps.cache-desktop-modules.outputs.cache-hit != 'true'
      run: yarn install --frozen-lockfile

    - run: yarn generate
    - run: yarn prepare-beta-build
    - run: yarn test-node
    - run: yarn test-electron
      timeout-minutes: 5
    - run: yarn build
      env:
        DISABLE_INSPECT_FUSE: on
    - name: Rebuild native modules for x64
      run: yarn electron:install-app-deps
    - run: yarn test-release
      env:
        NODE_ENV: production

    - uses: sarisia/actions-status-discord@v1
      if: always()
      with:
        webhook: ${{ secrets.DISCORD_ACTION_URL }}
        title: ${{ runner.os }} ${{ github.workflow }}

  linux:
    needs: lint
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
    - run: lsb_release -a
    - run: uname -a
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: '16.15.0'
    - run: sudo apt-get install xvfb
    - run: npm install -g yarn@1.22.10

    - name: Cache Desktop node_modules
      id: cache-desktop-modules
      uses: actions/cache@v3
      with:
        path: node_modules
        key: ${{ runner.os }}-${{ hashFiles('package.json', 'yarn.lock', 'patches/**') }}
    - name: Install Desktop node_modules
      if: steps.cache-desktop-modules.outputs.cache-hit != 'true'
      run: yarn install --frozen-lockfile

    - run: yarn generate
    - run: yarn prepare-beta-build
    - run: yarn build
      env:
        DISABLE_INSPECT_FUSE: on
    - run: xvfb-run --auto-servernum yarn test-node
    - run: xvfb-run --auto-servernum yarn test-electron
      timeout-minutes: 5
      env:
        LANG: en_US
        LANGUAGE: en_US
    - run: xvfb-run --auto-servernum yarn test-release
      env:
        NODE_ENV: production

    - uses: sarisia/actions-status-discord@v1
      if: always()
      with:
        webhook: ${{ secrets.DISCORD_ACTION_URL }}
        title: ${{ runner.os }} ${{ github.workflow }}

  windows:
    needs: lint
    runs-on: windows-latest
    timeout-minutes: 30
    if: ${{ github.repository == '3numdao/Signal.web3-Desktop' }}

    steps:
    - run: systeminfo
    - run: git config --global core.autocrlf false
    - run: git config --global core.eol lf
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: '16.15.0'
    - run: npm install -g yarn@1.22.10

    - name: Cache Desktop node_modules
      id: cache-desktop-modules
      uses: actions/cache@v3
      with:
        path: node_modules
        key: ${{ runner.os }}-${{ hashFiles('package.json', 'yarn.lock', 'patches/**') }}
    - name: Install Desktop node_modules
      if: steps.cache-desktop-modules.outputs.cache-hit != 'true'
      run: yarn install --frozen-lockfile

    - run: yarn generate
    - run: yarn test-node
    - run: copy package.json temp.json
    - run: del package.json
    - run: type temp.json | findstr /v certificateSubjectName | findstr /v certificateSha1 > package.json
    - run: yarn prepare-beta-build
    - run: yarn build
      env:
        DISABLE_INSPECT_FUSE: on
    - run: yarn test-electron
      timeout-minutes: 5
    - run: yarn test-release
      env:
        SIGNAL_ENV: production

    - uses: sarisia/actions-status-discord@v1
      if: always()
      with:
        webhook: ${{ secrets.DISCORD_ACTION_URL }}
        title: ${{ runner.os }} ${{ github.workflow }}

  mock-tests:
    needs: lint
    runs-on: ubuntu-latest
    if: ${{ false }} # ${{ github.repository == '3numdao/Signal-Desktop-private' }}
    timeout-minutes: 30

    steps:
    - name: Get system specs
      run: lsb_release -a
    - name: Get other system specs
      run: uname -a

    - name: Clone Desktop repo
      uses: actions/checkout@v3

    - name: Setup node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16.15.0'
    - name: Install global dependencies
      run: npm install -g yarn@1.22.10

    - name: Install xvfb
      run: sudo apt-get install xvfb

    - name: Cache Desktop node_modules
      id: cache-desktop-modules
      uses: actions/cache@v3
      with:
        path: node_modules
        key: ${{ runner.os }}-${{ hashFiles('package.json', 'yarn.lock', 'patches/**') }}

    - name: Install Desktop node_modules
      if: steps.cache-desktop-modules.outputs.cache-hit != 'true'
      run: yarn install --frozen-lockfile

    - name: Build typescript
      run: yarn generate
    - name: Bundle
      run: yarn build:webpack

    - name: Run mock server tests
      run: |
        set -o pipefail
        xvfb-run --auto-servernum yarn test-mock
      timeout-minutes: 10
      env:
        NODE_ENV: production
        DEBUG: mock:test:*
        ARTIFACTS_DIR: artifacts/startup

    - name: Upload mock server test logs on failure
      if: failure()
      uses: actions/upload-artifact@v2
      with:
        name: logs
        path: artifacts

    - uses: sarisia/actions-status-discord@v1
      if: always()
      with:
        webhook: ${{ secrets.DISCORD_ACTION_URL }}
        title: ${{ github.workflow }} mock-tests
